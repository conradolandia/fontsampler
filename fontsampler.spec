# -*- mode: python ; coding: utf-8 -*-
import os
import sys
from PyInstaller.utils.hooks import collect_dynamic_libs

# Collect Cairo libraries
cairo_libs = collect_dynamic_libs('cairocffi')

a = Analysis(
    ['main.py'],
    pathex=['.', 'fontsampler'],
    binaries=cairo_libs,
    datas=[
        ('templates', 'templates'),
        ('config.yaml', '.'),
    ],
    hiddenimports=[
        'fontTools.ttLib',
        'fontTools.ttLib.ttFont',
        'fontTools.ttLib.tables',
        'fontTools.ttLib.tables._n_a_m_e',
        'weasyprint',
        'weasyprint.text.fonts',
        'weasyprint.css',
        'weasyprint.css.targets',
        'weasyprint.document',
        'weasyprint.html',
        'weasyprint.layout',
        'weasyprint.pdf',
        'cairocffi',
        'cairocffi.pixbuf',
        'PIL',
        'PIL._imagingtk',
        'PIL._tkinter_finder',
        'tkinter',
        'tkinter.ttk',
        'rich',
        'rich.console',
        'rich.progress',
        'rich.panel',
        'rich.text',
        'rich.live',
        'rich.table',
        'rich.columns',
        'rich.prompt',
        'rich.markdown',
        'rich.syntax',
        'rich.traceback',
        'rich.theme',
        'rich.style',
        'rich.color',
        'rich.ansi',
        'rich.emoji',
        'rich.highlighter',
        'rich.layout',
        'rich.logging',
        'rich.measure',
        'rich.padding',
        'rich.rule',
        'rich.segment',
        'rich.spinner',
        'rich.status',
        'rich.tree',
        'fontsampler',
        'fontsampler.config',
        'fontsampler.warning_capture',
        'fontsampler.font_discovery',
        'fontsampler.font_validation',
        'fontsampler.cli',
        'fontsampler.template_manager',
        'fontsampler.incremental_pdf',
        'fontsampler.streaming_processor',
        'fontsampler.logging_config',
        'fontsampler.memory_utils',
        'jinja2',
        'jinja2.ext',
        'jinja2.loaders',
        'jinja2.environment',
        'jinja2.runtime',
        'jinja2.parser',
        'jinja2.lexer',
        'jinja2.compiler',
        'jinja2.utils',
        'markupsafe',
        'yaml',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    noarchive=False,
    optimize=0,
)
pyz = PYZ(a.pure)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.datas,
    [],
    name='fontsampler',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)
